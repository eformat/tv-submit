version: '3.5'

services:

  zookeeper:
    container_name: zookeeper
    image: strimzi/kafka:0.18.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    container_name: kafka
    image: strimzi/kafka:0.18.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override message.max.bytes=4000000"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "storage-topic:1:1:compact,global-id-topic:1:1:compact,input-topic:1:1:compact,logx-topic:1:1:compact,dbx-topic:1:1:compact"

#  registry:
#    container_name: registry1
#    image: apicurio/apicurio-registry-mem:1.2.1.Final
#    ports:
#      - "8081:8080"
#    environment:
#      QUARKUS_PROFILE: prod
#      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
#      APPLICATION_ID: registry_id
#      APPLICATION_SERVER: localhost:9000

  materialize:
    image: "quay.io/eformat/materialize-pod:latest"
    command: [
      "sh", "-c",
      "/usr/local/bin/materialized -w 2 -D /work/tv-submit-data"
    ]
    ports:
      - "6875:6875"
    environment:
      MZ_LOG: pgwire=info #trace
    hostname: materialize
    volumes:
      - /home/mike/tv-submit-data:/work/tv-submit-data:Z

#  mongo:
#    image: mongo:latest
#    ports:
#      - "27017:27017"
#    hostname: mongo
